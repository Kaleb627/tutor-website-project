/* reset to avoid styling conflicts */
*,
*::before,
*::after {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

/* putting main colors in variables for ease of use and adjustment later */
/* this is particularly useful when creating a business website where your brand may have a set color */
:root {
  --primary-color: #fc5d66;
  --secondary-color: #ffc05a;
  --light-color: #f9fafb;
  --dark-color: #272d35;
}

html,
body {
  /* sets primary and backup font if primary is missing */
  font-family: "Open Sans", sans-serif;
  line-height: 1.6;
  /* scroll smooth is important since most content is on the home page and clicking on navigation will jump between sections, smooth scrolling makes it less jarring and easier to follow */
  scroll-behavior: smooth;
}

a {
  /* get rid of link underlines */
  text-decoration: none;
}

ul {
  /* remove preset bullet points */
  list-style: none;
}

img {
  /* make sure images dont spill out of containers */
  max-width: 100%;
}

/* utility classes */
.container {
  max-width: 1200px;
  margin: 0 auto;
  padding: 0 2rem;
}
.container-sm {
  max-width: 1000px;
  margin: 0 auto;
  padding: 0 2rem;
}

.btn {
  display: inline-block;
  padding: 1rem 1.5rem;
  border: 1px solid var(--secondary-color);
  border-radius: 32px;
  background-color: var(--secondary-color);
  color: var(--dark-color);
  cursor: pointer;
  transition: all 0.2s;
  font-size: 1rem;
  max-width: 200px;

  &:hover {
    color: white;
    border: 1px white solid;
    background-color: var(--primary-color);
  }
}

/* the course used a section header utility class rather than styling each header for each section which makes sense but i wouldnt have considered until i made a few more. take note */
.section-header {
  max-width: 47rem;
  margin: 0 auto;
  text-align: center;
  margin-bottom: 2rem;

  h1 {
    margin-bottom: 0.5rem;
    font-size: 1.8rem;
    color: var(--dark-color);
  }

  p {
    font-size: 1.2rem;
    color: var(--dark-color);
  }
}

.heading-border {
  width: 3.8rem;
  height: 0.3rem;
  background: var(--primary-color);
  margin: 0 auto 1rem;
}

/* adding a section class to utilities since we want all sections to be deperated by the same amount */
section {
  margin: 4rem 0;
}

/* to make styling any future cards on this site easier we are going to place the chapter card styles in a card class unter utilities */
.card {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  gap: 1rem;
  text-align: center;
  box-shadow: 0 4px 12px 0px rgba(0, 0, 0, 0.1);
  padding: 2rem 1.5rem;
}

/* navbar */
.navbar {
  /* temp color to allowus to visualize the navbar while styling it */
  /* background-color: black; */
  color: white;
  padding: 1rem 2rem;
  /* we want this element position to be fixed at the top so we can make it follow the user as they scroll (this is one method there are other ways see position:sticky) */
  position: fixed;
  background-color: transparent;

  /* places element at the very top and all the way from left to right */
  top: 0;
  right: 0;
  left: 0;
  /* always be on top set high z-index */
  z-index: 1000;
  /* setting up a transition for use later when we make the navbar become transparent as you scroll past the hero section */
  /* transition: property trasition_length  speed_curve*/
  /* east-in-out = slow start and slow end */
  transition: background-color 0.3s ease-in-out;
}

.navbar.navbar-scroll {
  background-color: rgba(235, 77, 85, 0.7);
  /* we are going to use backdrop filter to add a little blur */
  backdrop-filter: blur(10px);
}

.navbar-flex {
  display: flex;
  /* places all remaining space between flex items which in this case is the logo and the list containing the navigation links */
  justify-content: space-between;
  /* centers items on vertical axis */
  align-items: center;

  img {
    width: 81px;
    height: 32px;
  }

  .main-menu-list {
    display: flex;
    align-items: center;
    gap: 2rem;
    font-weight: 600;
  }

  a {
    color: white;

    &:hover {
      color: var(--secondary-color);
    }
  }

  i {
    font-size: 1.5rem;
  }
}

/* mobile menu */
/* we want to hide the mobile menu by default and only show it if the screen is below a certain size so we will change this in the media query */
.mobile-menu {
  display: none;
}

.navbar {
  .mobile-menu-toggle {
    color: white;
    cursor: pointer;
  }

  .mobile-menu-items {
    position: absolute;
    top: 100%;
    left: 0;
    width: 100%;
    /* add some color and transparency so the content behind it isnt too obscured but the menu is readable */
    background-color: var(--dark-color);
    opacity: 0.9;
    padding: 2rem 3rem;
    text-align: center;
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
    border-top: 1px solid rgba(255, 255, 255, 0.1);
    /* we want the hamburger menu to slide in from the side when activates so we need to use some transform and translate attribtues */
    /* first we add translateX(100%) to move it off the screen */
    transform: translateX(100%);
    /* remember we want the menu to slide in not just appear so we need to use a transition */
    /* this means when the transform element is activated or changes it will perform the animation over 0. seconds and start slow */
    transition: transform 0.3s ease;

    /* then we need a class to put the mobile navigation menu back where it was when the button is activates */
    /* then we need to use javascript to add the class "active" when the hamburger menu is clikced and remove it when it is clicked again */
  }

  .mobile-menu-items.active {
    transform: translateX(0);
  }

  .mobile-menu-list {
    display: flex;
    flex-direction: column;
    gap: 2rem;
    font-size: 1.2rem;
  }
}

/* hero */
.hero {
  /* height: 100vh; */
  /* needed to add ../ to indicate a stepping out into parent folder? */
  background: var(--primary-color) url("../images/header-background.jpg") center
    center/cover no-repeat;
  /* /* using padding to adjust the location of the hero content via limiting the hero container ? i used height 100vh to cover the area*/
  padding: 11.5rem 2rem 8rem;
  /* cover the entire container area while staying within the container */
  /* background-size: 100% 100%; */
  color: white;
  /* want to hide any hoeizontal scroll bars especially when using tricks like with the mobile menu where the menu is outside the view of the window on the left or right */
  overflow: hidden;
  /* need position relative to properly position the frame decoration */
  position: relative;
  margin: -4rem;

  img {
    width: 100%;
    /* to move the image over to the right a bit we can use a negitive value for margin */
    margin-right: -6.25rem;
  }

  .frame-decoration {
    /* absolute positiong removes the element (svg) from the document flow palcing it on top and not moving around other elements allowing us to layer / position it for the wave effect */
    position: absolute;
    left: 0;
    bottom: 0;
    /* use hiehgt to shrink it down a little */
    height: 100px;
    /* width 100% keeps it responsive allowing it to change length with window size */
    width: 100%;
  }
}

.hero-flex {
  display: flex;
  justify-content: space-between;
  align-items: center;
  gap: 6rem;
  padding-bottom: 4rem;

  .hero-content {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: start;

    h1 {
      font-size: 3.5rem;
      line-height: 1.2;
      font-weight: 700;
      margin-bottom: 1rem;
    }

    p {
      font-size: 1.2rem;
      line-height: 1.8;
      font-weight: 400;
      margin-bottom: 2rem;
    }
  }
}

/* learn section */

.learn {
  .learn-flex {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    margin-top: -4rem;
  }
  /* initial styling for headers changed to use utility class located in utility section of this css document */

  /* .learn-text {
    text-align: center;
    margin-bottom: 2.9rem;
    max-width: 42rem;

    h1 {
      padding-bottom: 2rem;
      font-size: 1.8rem;
    }

    p {
      font-size: 1.1rem;
    }
  } */

  .learn-goal-grid {
    display: grid;
    grid-template: 1fr 1fr / 1fr 1fr 1fr 1fr;
    gap: 2rem;
    margin-top: 1rem;

    img {
      width: 100%;
      transition: 0.2s;
      padding-bottom: 0.2rem;

      &:hover {
        transform: scale(1.1);
      }
    }

    figcaption {
      font-weight: bold;
      font-size: 1rem;
    }
  }
}

/* chapter section */
.course-chapters {
  margin-bottom: 3rem;
  display: flex;
  flex-direction: column;

  .chapter-cards {
    display: grid;
    grid-template: 1fr / 1fr 1fr 1fr;
    gap: 2rem;
    padding: 2rem 3rem;
  }

  h3 {
    line-height: 1.3;
  }

  p {
    line-height: 1.4;
  }

  img {
    height: 6rem;
  }
}

/* summary */
.summary {
  background-color: var(--light-color);
  padding-bottom: 5rem;
  margin-bottom: 0;

  .section-header {
    padding-top: 1.5rem;
  }

  .summary-flex {
    margin: 0 auto;
    max-width: 55rem;
    box-shadow: 0 4px 12px 0px rgba(0, 0, 0, 0.1);
    padding: 2rem 2rem;
    padding-bottom: 0.3rem;
  }

  h3 {
    color: white;
    background-color: var(--primary-color);
    padding: 0.2rem 1rem;
  }

  li {
    margin: 1.5rem 0;
    font-size: 0.9rem;
    border-bottom: 1px solid rgba(211, 211, 211, 0.588);
    padding-bottom: 1.4rem;
  }

  li:nth-child(3n) {
    border: none;
  }
}

/* info */
.info {
  margin: 0;
  display: flex;
  justify-content: center;
  align-items: center;
  /* to make the image resize properly we need to include top/cover */
  /* top is the position starting the image from the top of the container */
  /* cover is the size  making sure it fills the container */
  /* cover scales teh image while preserving is aspect ratio */
  background: var(--primary-color) url("../images/audience.jpg") top/cover
    no-repeat;

  .info-left {
    width: 50%;
  }

  .info-content {
    display: flex;
    flex-direction: column;
    justify-content: center;
    width: 50%;
    padding: 3rem 3.5rem;
    background-color: var(--primary-color);
    color: white;

    h1 {
      margin-bottom: 1rem;
      font-size: 2rem;
    }

    p {
      margin-bottom: 1.8rem;
      font-size: 1.1rem;
    }

    li {
      margin-bottom: 0.5rem;
    }

    i {
      padding-right: 0.5rem;
      color: var(--secondary-color);
    }
  }
}

/* takeaway */
.takeaway-flex {
  display: flex;
  flex-direction: column;
  max-width: 1100px;
}

.takeaway-cards {
  display: grid;
  grid: 1fr 1fr/1fr 1fr 1fr;
  gap: 2rem;
  margin-top: 1rem;

  .card {
    flex-direction: row;
    text-align: start;
    padding: 1rem 1.5rem;

    i {
      color: var(--primary-color);
      margin-right: 0.5rem;
    }
  }

  span {
    font-weight: bold;
  }
}

/* details */
.details {
  img {
    width: 100%;
    max-width: 500px;
  }
}

.details-flex {
  display: flex;
  justify-content: center;
  align-items: center;
  gap: 2rem;

  h1 {
    margin-bottom: 1rem;
    font-size: 2rem;
  }

  .heading-border {
    margin: 0;
    margin-bottom: 1rem;
    height: 0.2rem;
  }

  p {
    margin-bottom: 1.5rem;
    font-size: 1rem;
  }

  .details-content {
    display: flex;
    flex-direction: column;
    justify-content: center;
    max-width: 25rem;
    margin-left: 6rem;
  }

  .btn {
    width: 9rem;
    text-align: center;
    padding: 1rem 0rem;
  }
}

/* author */
.author {
  img {
    width: 100%;
    max-width: 500px;
  }
}

/* here i structured the html to mirroe the details section however as mentioned in walkthrough i could have just copied the details section and set the flex box to reverse row for the same effect */
.author-flex {
  display: flex;
  justify-content: center;
  align-items: center;
  gap: 2rem;

  h1 {
    margin-bottom: 0.8rem;
    font-size: 2rem;
  }

  .heading-border {
    margin: 0;
    margin-bottom: 1rem;
    height: 0.2rem;
  }

  p {
    margin-bottom: 1rem;
    font-size: 1rem;
  }

  ul {
    margin-bottom: 1rem;
    font-size: 0.9rem;

    li {
      margin-bottom: 0.5rem;
    }
  }

  span {
    font-weight: bold;
  }

  i {
    color: var(--primary-color);
    margin-right: 0.5rem;
    font-size: 0.9rem;
  }

  .author-content {
    display: flex;
    flex-direction: column;
    justify-content: center;
    max-width: 25rem;
    margin-right: 6rem;

    .btn {
      width: 9rem;
      text-align: center;
      padding: 1rem 0rem;
    }
  }
}

/* stats */

.stats {
  background: var(--primary-color) url("../images/stats-background.jpg")
    center/cover no-repeat;
  color: white;
  margin: 2.5rem 0;
  padding: 3rem 0;
}

.stats-flex {
  display: flex;
  justify-content: space-between;
  align-items: center;
  text-align: center;

  img {
    width: 100%;
    max-width: 500px;
  }
}

.stats-flex .stats-content {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  gap: 1.8rem;
  max-width: 450px;

  .stat-numbers {
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 1.5rem;

    h3 {
      font-size: 2.5rem;
      font-weight: 700;
    }

    p {
      font-size: 0.7rem;
      font-weight: 500;
    }
  }
}

/* newsletter */
.newsletter {
  display: flex;
  justify-content: center;
  align-items: center;
}

.newsletter-flex {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  text-align: center;
  gap: 1rem;
  background-color: var(--light-color);
  border: 1px solid lightgray;
  padding: 3rem 2rem;
  width: 100%;
  margin: 1.5rem;

  .email-input {
    border-radius: 20px;
    border: 1px solid lightgray;
    padding: 0.8rem 1rem;
    font-size: 0.7rem;
    width: 100%;
    max-width: 400px;
  }

  p {
    max-width: 600px;
  }
}

.socials {
  text-align: center;
  color: white;
  background-color: var(--dark-color);
  padding: 4.5rem 0;
  margin-top: 2rem;
  margin-bottom: 0;
}

.socials-flex {
  display: flex;
  flex-direction: column;
  gap: 1.4rem;

  p {
    font-size: 1.4rem;
  }

  .social-icons {
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 1rem;

    a {
      color: white;
      font-size: 1.3rem;

      &:hover {
        color: var(--secondary-color);
      }
    }
  }
}

/* footer */
.footer {
  margin: 0;
}

.footer-flex {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 2rem 4rem;
  background-color: var(--dark-color);
  color: white;
  border-top: 1px solid rgb(77, 77, 77);

  p {
    font-weight: 400;
    font-size: 0.9rem;
  }

  ul {
    display: flex;
    gap: 1rem;

    a {
      font-size: 0.9rem;
      color: white;

      &:hover {
        color: var(--secondary-color);
      }
    }
  }
}

/* Media Queries */

/* these allow us to tailer the website style based on screen size which is vital to maintain readability and usability across devices and screen resolutions */
@media (max-width: 1200px) {
  section {
    margin: 3rem 0;
  }
  .hero {
    margin-bottom: 0;
    .hero-flex {
      gap: 2rem;
    }

    img {
      max-width: 500px;
      margin-right: 0;
    }

    h1 {
      font-size: 3rem;
    }
  }

  .learn {
    margin-top: 4rem;
  }

  .course-chapters {
    h1 {
      margin-top: 4rem;
    }
  }
}

@media (max-width: 992px) {
  .hero {
    text-align: center;

    .hero-flex {
      flex-direction: column;
      padding-bottom: 4rem;
    }

    img {
      max-width: 600px;
      margin-right: 0;
      margin-top: 2rem;
    }

    h1 {
      font-size: 3rem;
    }

    .hero-content {
      justify-content: center;
      align-items: center;
    }
  }
  .learn {
    .learn-goal-grid {
      grid-template: 1fr 1fr 1fr / 1fr 1fr 1fr;
    }
  }

  .info {
    flex-direction: column;

    .info-left {
      display: none;
    }

    .info-content {
      width: 100%;
    }
  }

  section {
    margin-top: 2rem;
  }

  .author-flex,
  .details-flex {
    flex-direction: column;
  }

  .stats-flex {
    flex-direction: column;
    gap: 1rem;
  }
}

/* we need to set up the page for mobile sized screens especially phones where we want to impliment a hamburer menu so we will start here */
@media (max-width: 768px) {
  /* first we want to hide the desktop version of the menu so it doesnt interfere with the mobile menu */
  .main-menu-items {
    display: none;
  }

  .navbar {
    padding: 1rem 0.5rem;
    .mobile-menu {
      display: block;
    }

    .mobile-menu-toggle {
      display: block;
      /* padding: 0.6rem; */
    }
  }

  .hero {
    padding-left: 4rem;
    padding-right: 4rem;
  }

  .learn {
    .learn-goal-grid {
      grid-template: 1fr 1fr 1fr / 1fr 1fr;
    }
  }

  .course-chapters {
    .chapter-cards {
      display: flex;
      flex-direction: column;
      max-width: 35rem;
    }
  }

  .takeaways {
    margin-top: 2rem;

    .takeaway-cards {
      grid: auto/1fr 1fr;
    }
  }
}

@media (max-width: 576px) {
  .hero {
    margin-top: -5rem;
    .hero-flex {
      h1 {
        font-size: 2.5rem;
      }
    }
  }

  .learn {
    .learn-goal-grid {
      grid-template: auto / 1fr;
    }
  }

  .course-chapters {
    .chapter-cards {
      width: 100%;
      padding: 0 1rem;
    }
  }

  .info {
    .info-content {
      padding: 2rem;
    }

    h1 {
      font-size: 1.5rem;
    }
    .info-left {
      display: none;
    }
  }

  .takeaways {
    .takeaway-cards {
      grid: auto/1fr;
    }
  }

  .stat-numbers {
    flex-wrap: wrap;
  }
}
